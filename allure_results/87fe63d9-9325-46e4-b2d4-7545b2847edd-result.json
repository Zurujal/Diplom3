{"name": "При создании нового заказа счетчик выполнено за все время увеличивается", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"Modal_modal__close_modified__3V5XS Modal_modal__close__TnseK\">...</button> is not clickable at point (906, 127). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\n  (Session info: chrome=128.0.6613.137)\nStacktrace:\n0   chromedriver                        0x0000000100ced208 cxxbridge1$str$ptr + 1927396\n1   chromedriver                        0x0000000100ce566c cxxbridge1$str$ptr + 1895752\n2   chromedriver                        0x00000001008e0808 cxxbridge1$string$len + 89564\n3   chromedriver                        0x000000010092a3b8 cxxbridge1$string$len + 391564\n4   chromedriver                        0x00000001009289e4 cxxbridge1$string$len + 384952\n5   chromedriver                        0x0000000100926c10 cxxbridge1$string$len + 377316\n6   chromedriver                        0x000000010092615c cxxbridge1$string$len + 374576\n7   chromedriver                        0x000000010091b5d4 cxxbridge1$string$len + 330664\n8   chromedriver                        0x000000010091b064 cxxbridge1$string$len + 329272\n9   chromedriver                        0x000000010095e228 cxxbridge1$string$len + 604156\n10  chromedriver                        0x0000000100919698 cxxbridge1$string$len + 322668\n11  chromedriver                        0x000000010091a310 cxxbridge1$string$len + 325860\n12  chromedriver                        0x0000000100cb3e78 cxxbridge1$str$ptr + 1693012\n13  chromedriver                        0x0000000100cb877c cxxbridge1$str$ptr + 1711704\n14  chromedriver                        0x0000000100c993ec cxxbridge1$str$ptr + 1583816\n15  chromedriver                        0x0000000100cb904c cxxbridge1$str$ptr + 1713960\n16  chromedriver                        0x0000000100c89fc8 cxxbridge1$str$ptr + 1521316\n17  chromedriver                        0x0000000100cd6b68 cxxbridge1$str$ptr + 1835588\n18  chromedriver                        0x0000000100cd6ce4 cxxbridge1$str$ptr + 1835968\n19  chromedriver                        0x0000000100ce5308 cxxbridge1$str$ptr + 1894884\n20  libsystem_pthread.dylib             0x000000019705af94 _pthread_start + 136\n21  libsystem_pthread.dylib             0x0000000197055d34 thread_start + 8", "trace": "self = <tests.order_history_page_test.TestOrderHistoryPage object at 0x103f637f0>, main_page = <pages.main_page.MainPage object at 0x1040b9490>\nprofile_page = <pages.profile_page.ProfilePage object at 0x1040d50d0>, order_history_page = <pages.order_history_page.OrderHistoryPage object at 0x1040d5130>\n\n    @allure.title(\"При создании нового заказа счетчик выполнено за все время увеличивается\")\n    def test_all_time_counter(self, main_page, profile_page, order_history_page):\n        main_page.click_on_profile_button()\n        profile_page.fill_email_field()\n        profile_page.fill_password_field()\n        profile_page.click_enter_button()\n        main_page.add_ingredient()\n        main_page.click_on_confirm_order_button()\n        order_id = main_page.order_number()\n>       main_page.click_on_cross_button()\n\ntests/order_history_page_test.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/main_page.py:34: in click_on_cross_button\n    self.click_on_element(locator)\npages/base_page.py:31: in click_on_element\n    element.click()\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1040d54c0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...00019705af94 _pthread_start + 136\\\\n21  libsystem_pthread.dylib             0x0000000197055d34 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"Modal_modal__close_modified__3V5XS Modal_modal__close__TnseK\">...</button> is not clickable at point (906, 127). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\nE         (Session info: chrome=128.0.6613.137)\nE       Stacktrace:\nE       0   chromedriver                        0x0000000100ced208 cxxbridge1$str$ptr + 1927396\nE       1   chromedriver                        0x0000000100ce566c cxxbridge1$str$ptr + 1895752\nE       2   chromedriver                        0x00000001008e0808 cxxbridge1$string$len + 89564\nE       3   chromedriver                        0x000000010092a3b8 cxxbridge1$string$len + 391564\nE       4   chromedriver                        0x00000001009289e4 cxxbridge1$string$len + 384952\nE       5   chromedriver                        0x0000000100926c10 cxxbridge1$string$len + 377316\nE       6   chromedriver                        0x000000010092615c cxxbridge1$string$len + 374576\nE       7   chromedriver                        0x000000010091b5d4 cxxbridge1$string$len + 330664\nE       8   chromedriver                        0x000000010091b064 cxxbridge1$string$len + 329272\nE       9   chromedriver                        0x000000010095e228 cxxbridge1$string$len + 604156\nE       10  chromedriver                        0x0000000100919698 cxxbridge1$string$len + 322668\nE       11  chromedriver                        0x000000010091a310 cxxbridge1$string$len + 325860\nE       12  chromedriver                        0x0000000100cb3e78 cxxbridge1$str$ptr + 1693012\nE       13  chromedriver                        0x0000000100cb877c cxxbridge1$str$ptr + 1711704\nE       14  chromedriver                        0x0000000100c993ec cxxbridge1$str$ptr + 1583816\nE       15  chromedriver                        0x0000000100cb904c cxxbridge1$str$ptr + 1713960\nE       16  chromedriver                        0x0000000100c89fc8 cxxbridge1$str$ptr + 1521316\nE       17  chromedriver                        0x0000000100cd6b68 cxxbridge1$str$ptr + 1835588\nE       18  chromedriver                        0x0000000100cd6ce4 cxxbridge1$str$ptr + 1835968\nE       19  chromedriver                        0x0000000100ce5308 cxxbridge1$str$ptr + 1894884\nE       20  libsystem_pthread.dylib             0x000000019705af94 _pthread_start + 136\nE       21  libsystem_pthread.dylib             0x0000000197055d34 thread_start + 8\n\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "Клик на кнопку Личный кабинет", "status": "passed", "start": 1726429086975, "stop": 1726429087363}, {"name": "Ввод Email", "status": "passed", "start": 1726429087363, "stop": 1726429087442}, {"name": "Ввод пароля", "status": "passed", "start": 1726429087443, "stop": 1726429087480}, {"name": "Нажатие кнопки Войти", "status": "passed", "start": 1726429087480, "stop": 1726429087508}, {"name": "Добавление ингредиента в заказ", "status": "passed", "start": 1726429087509, "stop": 1726429088603}, {"name": "Нажатие на кнопку Оформить заказ", "status": "passed", "start": 1726429088603, "stop": 1726429088640}, {"name": "Номер заказа", "status": "passed", "start": 1726429088640, "stop": 1726429088666}, {"name": "Нажатие на иконку крестика", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"Modal_modal__close_modified__3V5XS Modal_modal__close__TnseK\">...</button> is not clickable at point (906, 127). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\n  (Session info: chrome=128.0.6613.137)\nStacktrace:\n0   chromedriver                        0x0000000100ced208 cxxbridge1$str$ptr + 1927396\n1   chromedriver                        0x0000000100ce566c cxxbridge1$str$ptr + 1895752\n2   chromedriver                        0x00000001008e0808 cxxbridge1$string$len + 89564\n3   chromedriver                        0x000000010092a3b8 cxxbridge1$string$len + 391564\n4   chromedriver                        0x00000001009289e4 cxxbridge1$string$len + 384952\n5   chromedriver                        0x0000000100926c10 cxxbridge1$string$len + 377316\n6   chromedriver                        0x000000010092615c cxxbridge1$string$len + 374576\n7   chromedriver                        0x000000010091b5d4 cxxbridge1$string$len + 330664\n8   chromedriver                        0x000000010091b064 cxxbridge1$string$len + 329272\n9   chromedriver                        0x000000010095e228 cxxbridge1$string$len + 604156\n10  chromedriver                        0x0000000100919698 cxxbridge1$string$len + 322668\n11  chromedriver                        0x000000010091a310 cxxbridge1$string$len + 325860\n12  chromedriver                        0x0000000100cb3e78 cxxbridge1$str$ptr + 1693012\n13  chromedriver                        0x0000000100cb877c cxxbridge1$str$ptr + 1711704\n14  chromedriver                        0x0000000100c993ec cxxbridge1$str$ptr + 1583816\n15  chromedriver                        0x0000000100cb904c cxxbridge1$str$ptr + 1713960\n16  chromedriver                        0x0000000100c89fc8 cxxbridge1$str$ptr + 1521316\n17  chromedriver                        0x0000000100cd6b68 cxxbridge1$str$ptr + 1835588\n18  chromedriver                        0x0000000100cd6ce4 cxxbridge1$str$ptr + 1835968\n19  chromedriver                        0x0000000100ce5308 cxxbridge1$str$ptr + 1894884\n20  libsystem_pthread.dylib             0x000000019705af94 _pthread_start + 136\n21  libsystem_pthread.dylib             0x0000000197055d34 thread_start + 8\n\n", "trace": "  File \"/Users/zurujal/Library/Python/3.9/lib/python/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/zurujal/PycharmProjects/Diplom3/pages/main_page.py\", line 34, in click_on_cross_button\n    self.click_on_element(locator)\n  File \"/Users/zurujal/PycharmProjects/Diplom3/pages/base_page.py\", line 31, in click_on_element\n    element.click()\n  File \"/Library/Python/3.9/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/Library/Python/3.9/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/Library/Python/3.9/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1726429088666, "stop": 1726429089755}], "start": 1726429086974, "stop": 1726429089767, "uuid": "7192efee-9e30-47fb-8b3e-ae7c8d6a4768", "historyId": "634e9cc2815bf763562b0f370628a830", "testCaseId": "634e9cc2815bf763562b0f370628a830", "fullName": "tests.order_history_page_test.TestOrderHistoryPage#test_all_time_counter", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "order_history_page_test"}, {"name": "subSuite", "value": "TestOrderHistoryPage"}, {"name": "host", "value": "zurujal-osx"}, {"name": "thread", "value": "14344-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.order_history_page_test"}]}